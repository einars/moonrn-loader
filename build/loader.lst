# file opened: src/loader.asm
 1    0000                              device zxspectrum128
 2    0000
 3    0000                              org 0x5ccb
 4    5CCB
 5    5CCB              basic_start equ $
 6    5CCB
 7    5CCB              B_RANDOMIZE equ 0f9h
 8    5CCB              B_USR equ 0c0h
 9    5CCB
10    5CCB
11    5CCB              target_code_start equ 32768
12    5CCB
13    5CCB                              lua
14    5CCB ~                            local f
15    5CCB ~
16    5CCB ~                            f = io.open("./pristine/moonrn.bin")
17    5CCB ~                            sj.insert_define("target_code_len", f:seek("end"))
18    5CCB ~                            f:close()
19    5CCB ~
20    5CCB ~                            f = io.open("./build/code.pck")
21    5CCB ~                            sj.insert_define("packed_code_len", f:seek("end"))
22    5CCB ~                            f:close()
23    5CCB ~
24    5CCB                              endlua
25    5CCB
26    5CCB              line10:
27    5CCB 00 0A                        db 0, 10
28    5CCD 4C 03                        dw End - .cmds
29    5CCF              .cmds
30    5CCF F9 C0 31 0E                  db B_RANDOMIZE, B_USR, "1", 14, 0, 0
30    5CD3 00 00
31    5CD5 D9 5C                        dw Start
32    5CD7 00 3A                        db 0, ':'
33    5CD9
34    5CD9              Start:
35    5CD9 31 FF FF                     ld sp, 65535
36    5CDC AF                           xor a
37    5CDD FD 77 0E                     ld (iy+14), a
38    5CE0 D3 FE                        out (254), a
39    5CE2 21 1A 60                     ld  hl, Image_end ; reverse unpacking
40    5CE5 11 FF 5A                     ld  de, 0x4000+6912 - 1
41    5CE8
42    5CE8 CD 02 5D                     call ue2_unpack
43    5CEB
44    5CEB DD 21 2A 5D                  ld ix, packed_code_start
45    5CEF 11 42 45                     ld de, 17730
46    5CF2 3E FF                        ld a, 255
47    5CF4 37                           scf
48    5CF5 CD 56 05                     call 0556h
49    5CF8
50    5CF8 21 00 80                     ld hl, target_code_start
51    5CFB E5                           push hl
52    5CFC 11 A7 D7                     ld de, target_code_start + 22440 - 1
53    5CFF 21 6B A2                     ld hl, packed_code_start + 17730 - 1
54    5D02
55    5D02
56    5D02              ue2_unpack:
57    5D02 3E 80                        ld a, 128
58    5D04
59    5D04 01 01 00     MainLoop        ld bc,1
60    5D07 CD 24 5D                     call ReadBit                         ; Literal?
61    5D0A 38 10                        jr c,CopyBytes
62    5D0C
63    5D0C CD 24 5D     EliasGamma      call ReadBit
64    5D0F CB 11                        rl c
65    5D11 D8                           ret  c                               ; Option to include the end of stream marker.
66    5D12 CD 24 5D                     call ReadBit
67    5D15 38 F5                        jr c,EliasGamma
68    5D17
69    5D17 E5                           push hl
70    5D18 6E                           ld l,(hl)
71    5D19 60                           ld h,b
72    5D1A 19                           add hl,de
73    5D1B 23                           inc hl
74    5D1C ED B8        CopyBytes       lddr
75    5D1E 38 E4                        jr c,MainLoop
76    5D20 E1                           pop hl
77    5D21 2B                           dec hl
78    5D22 18 E0                        jr MainLoop
79    5D24
80    5D24 87           ReadBit         add a,a
81    5D25 C0                           ret nz
82    5D26 7E                           ld a,(hl)
83    5D27 2B                           dec hl
84    5D28 17                           rla
85    5D29 C9                           ret
86    5D2A
87    5D2A              packed_code_start:
88    5D2A                              incbin "build/loading.pck"
89    601B              Image_end: equ $-1
90    601B
91    601B              End equ $
92    601B
93    601B                  display "Saving moo.tap"
94    601B                  emptytap "moo.tap"
95    601B                  savetap  "moo.tap", basic, "MoonRn", basic_start, End - basic_start, 10
96    601B                  tapout "moo.tap"
97    601B                  incbin "build/code.pck"
98    A55D                  tapend
99    A55D
# file closed: src/loader.asm
